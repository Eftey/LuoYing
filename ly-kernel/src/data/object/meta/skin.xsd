<?xml version="1.0"?>
<!--
xs:string
xs:decimal
xs:integer
xs:boolean
xs:date
xs:time
-->

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://fighter.huliqing.name"
           xmlns="http://fighter.huliqing.name"
           elementFormDefault="qualified">
    
    <xs:include schemaLocation="base.xsd" />
    
    <xs:element name="root">
        <xs:complexType>
            <xs:all>
                <xs:element ref="skinOutfit" />
                <xs:element ref="skinWeapon" />
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="skinWeapon">
        <xs:annotation>
            <xs:documentation>
                武器装备
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="baseSkin">
                    <xs:attribute name="weaponType" ref="weaponType" use="required" >
                        <xs:annotation>
                            <xs:documentation>
                                指定一个武器类型，只有设置了该值，该skin才能作为武器类型存在,否则只作为普通装备。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="slots" type="xs:integer" use="required" >
                        <xs:annotation>
                            <xs:documentation>
                                设置武器支持的槽位列表,格式如："slot1,slot2,...",
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="skinOutfit">
        <xs:annotation>
            <xs:documentation>
                基本skin,如：皮肤，装备等
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="baseSkin">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="baseSkin">
        <xs:complexContent>
            <xs:extension base="base">
                <xs:attribute name="icon" ref="icon" use="required" />
                <xs:attribute name="file" ref="file" use="required" />
                <xs:attribute name="baseSkin" type="bool" use="optional" >
                    <xs:annotation>
                        <xs:documentation>是否为基本破肤</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" use="required" >
                    <xs:annotation>
                        <xs:documentation>
                            skin的类型，格式如："type1,type2,type3",注：即一个skin可以属于多个type的。
                            比如上下连身的长袍的type可能为"7,8", 目前最多支持32个类型，取值从[0-31],
                            不要超过该范围
                            type参考如下（具体以SkinConstants所定义的type为准）：
                            ear(1), eye(2), face(3), foot(4), hair(5), hand(6), lowerBody(7), upperBody(8);
                            weaponLeft左武器(9),weaponRight右武器(10),
                            blinder眼罩(11),mouthMask口罩(12),faceMask面罩(13),horn角(14),
                        </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string" >
                            <xs:enumeration value="1" />
                            <xs:enumeration value="2" />
                            <xs:enumeration value="3" />
                            <xs:enumeration value="4" />
                            <xs:enumeration value="5" />
                            <xs:enumeration value="6" />
                            <xs:enumeration value="7" />
                            <xs:enumeration value="8" />
                            <xs:enumeration value="9" />
                            <xs:enumeration value="10" />
                            <xs:enumeration value="11" />
                            <xs:enumeration value="12" />
                            <xs:enumeration value="13" />
                            <xs:enumeration value="14" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="conflictType" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            排斥的目标skin类型，格式："type1,type2,type3,...",一般情况下，当一个skin添加到角色身上时，目标角色身上的
                            相同类型(type)的skin会脱下来收起，即同一个类型的skin不可能同时添加到角色身上.而conflictType参数可指定其它
                            类型的skin也脱下来，比如当面具带上去时，这时眼罩和口罩可能要从角色身上脱下。则对面具类型的conflictType参数可
                            设定为:"11,12"
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="bindBone" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>
                            如果指定了一个骨头名称，则skin将会被绑定到该骨头上,否则将直接被绑定到目标根节点。
                            注：对于使用bindBone的skin模型必须在blender导出时使用obj格式，不能使用ogre格式导出。
                            否则在绑定到角色身上时会发生错位。对于静态类的skin模型（即没有动画、不受权重影响的模型）
                            直接绑定到骨头节点上性能比较好。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="localLocation" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地变换，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="localRotation" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地旋转(弧度)，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="localScale" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地缩放，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="applyAttributes" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>
                            指定要应用到目标角色上的属性，格式："attribute|value",多个设置使用半角逗号分隔。
                            示例："attributeDefence|50,attributeMagicDefence|30", 表示物理防御+50，魔法防御+30
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="matchAttributes" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>
                            属性限制，这些限制定义了：只有角色的属性与这些限制完全匹配时才可以使用这件物品
                            格式："attributeName|value,attributeName|value,..."
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="mat" ref="mat" use="required" />
                <xs:attribute name="cost" ref="cost" use="optional" />
                <xs:attribute name="sounds" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>声效,格式:"sound1,sound2,..."</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
</xs:schema>
