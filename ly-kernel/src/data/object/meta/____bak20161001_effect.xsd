<?xml version="1.0"?>

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://luoying.huliqing.name"
           xmlns="http://luoying.huliqing.name"
           elementFormDefault="qualified" >
    
    <xs:include schemaLocation="base.xsd" />
    
    <xs:element name="root">
        <xs:complexType>
            <xs:all>
                <xs:element ref="effectGroup" />
                <xs:element ref="effectParticle" />
                <xs:element ref="effectTexture" />
                <xs:element ref="effectModel" />
                <xs:element ref="effectSlideColor" />
                <xs:element ref="effectSlideColorSpline" />
                <xs:element ref="effectSlideColorIOSpline" />
                <xs:element ref="effectProjection" />
                
                <!--OutDate-->
<!--                <xs:element ref="effectHalo" />
                <xs:element ref="effectEncircleHalo" />  环绕的星光 
                <xs:element ref="effectSimpleGroup" />
                <xs:element ref="effectTextureCylinder" />-->
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="effectProjection">
        <xs:annotation>
            <xs:documentation>
                投射类效果，这个效果可以把一些材质贴图投射到指定的物体上。在使用
                时需要指定一些投射目标对象。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="texture" type="xs:string" use="required">
                        <xs:annotation><xs:documentation>指定要使用来投射的材质贴图，如："Textures/tex/demo.jpg"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="color" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>贴图颜色混合，格式:"r,g,b,a",如"1.0,1.0,1.0,1.0"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="projDir" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>投射方向(Direction)，格式:"x,y,z"，不需要归一化，后台会自动归一</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="projUp" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                投射时的up方向，注意不要与投射方向projDir平行，否则可能出现投射后变形的问题。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="projPos" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>投射位置，格式:"x,y,z"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="debug" type="bool" use="optional"></xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="effectSlideColorIOSpline">
        <xs:annotation>
            <xs:documentation>
                Spline曲面颜色滑动效果,材质贴图可以从一端滑入，然后从另一端滑出。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="startColor" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>可视贴图的基本颜色,格式："r,g,b,a", 如: "1,1,1,1"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="endColor" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>可视贴图的基本颜色,格式："r,g,b,a", 如: "1,1,1,1"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="mask" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>遮罩材质贴图,示例："Textures/mask.jpg"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="tex" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>可视材质贴图，示例："Textures/tex.jpg"</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="texChangeDir" type="bool" use="optional" />
                    <xs:attribute name="fixedPoints" type="xs:string" use="required">
                        <xs:annotation><xs:documentation>固定的路径点,格式: "x|y|z,x|y|z,..."</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="randomPoints" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation> 随机路径点,关联到emitterShape,格式："emitterShape1,emitterShape2,..."。如果指定了fixPoints则随机路径点将无效。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="width" type="xs:decimal" use="optional">
                        <xs:annotation><xs:documentation>曲面宽度</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="segments" type="xs:integer" use="optional">
                        <xs:annotation><xs:documentation>曲面的分段数，值越高则曲面越平滑，但是占用资源越多，该值不能小于1.默认20左右</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="tension" type="xs:decimal" use="optional">
                        <xs:annotation><xs:documentation>spline曲线的张弛度，默认0.5f</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="cycle" type="bool" use="optional">
                        <xs:annotation><xs:documentation>是否让spline封闭,默认false</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="up" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>曲面的开始的up方向，默认Vector3f.UNIT_Y,该方向影响曲面的面朝向。</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dimension" type="xs:integer" use="optional">
                        <xs:annotation><xs:documentation>曲面维度，整数值，默认1，值越大效果越有实体感，但占资源越多。</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="repeatTimes" type="xs:integer" use="optional">
                        <xs:annotation><xs:documentation>动画循环次数，默认1次</xs:documentation></xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="effectSlideColorSpline">
        <xs:annotation>
            <xs:documentation>
                Spline曲面颜色滑动效果
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectSlideColorBase">
                    <xs:attribute name="fixedPoints" type="xs:string" use="required">
                        <xs:annotation><xs:documentation>固定的路径点,格式: "x|y|z,x|y|z,..."</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="randomPoints" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation> 随机路径点,关联到emitterShape,格式："emitterShape1,emitterShape2,..."。如果指定了fixPoints则随机路径点将无效。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="width" type="xs:decimal" use="optional">
                        <xs:annotation><xs:documentation>曲面宽度</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="segments" type="xs:integer" use="optional">
                        <xs:annotation><xs:documentation>曲面的分段数，值越高则曲面越平滑，但是占用资源越多，该值不能小于1.默认20左右</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="tension" type="xs:decimal" use="optional">
                        <xs:annotation><xs:documentation>spline曲线的张弛度，默认0.5f</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="cycle" type="bool" use="optional">
                        <xs:annotation><xs:documentation>是否让spline封闭,默认false</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="up" type="xs:string" use="optional">
                        <xs:annotation><xs:documentation>曲面的开始的up方向，默认Vector3f.UNIT_Y,该方向影响曲面的面朝向。</xs:documentation></xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dimension" type="xs:integer" use="optional">
                        <xs:annotation><xs:documentation>曲面维度，整数值，默认1，值越大效果越有实体感，但占资源越多。</xs:documentation></xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="effectSlideColor">
        <xs:annotation>
            <xs:documentation>
                滑动的颜色特效
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectSlideColorBase">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="effectSlideColorBase">
        <xs:annotation>
            <xs:documentation>
                滑动的颜色特效
            </xs:documentation>
        </xs:annotation>        
        <xs:complexContent>
            <xs:extension base="effectBase">
                <xs:attribute name="startColor" type="xs:string" use="optional">
                    <xs:annotation><xs:documentation>可视贴图的基本颜色,格式："r,g,b,a", 如: "1,1,1,1"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="endColor" type="xs:string" use="optional">
                    <xs:annotation><xs:documentation>可视贴图的基本颜色,格式："r,g,b,a", 如: "1,1,1,1"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="mask" type="xs:string" use="optional">
                    <xs:annotation><xs:documentation>遮罩材质贴图,示例："Textures/mask.jpg"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="maskAnimY" type="bool" use="optional" />
                <xs:attribute name="maskAnimX" type="bool" use="optional" />
                <xs:attribute name="maskChangeDir" type="bool" use="optional" />
                <xs:attribute name="maskScaleY" type="xs:decimal" use="optional" />
                <xs:attribute name="maskScaleX" type="xs:decimal" use="optional" />
                <xs:attribute name="maskSpeed" type="xs:decimal" use="optional" />
                <xs:attribute name="maskWrap" use="optional" >
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Repeat" />
                            <xs:enumeration value="MirroredRepeat" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="tex" type="xs:string" use="optional">
                    <xs:annotation><xs:documentation>可视材质贴图，示例："Textures/tex.jpg"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="texAnimY" type="bool" use="optional" />
                <xs:attribute name="texAnimX" type="bool" use="optional" />
                <xs:attribute name="texChangeDir" type="bool" use="optional" />
                <xs:attribute name="texScaleY" type="xs:decimal" use="optional" />
                <xs:attribute name="texScaleX" type="xs:decimal" use="optional" />
                <xs:attribute name="texSpeed" type="xs:decimal" use="optional" />
                <xs:attribute name="texWrap" use="optional" >
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Repeat" />
                            <xs:enumeration value="MirroredRepeat" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="effectModel">
        <xs:annotation>
            <xs:documentation>
                使用一个模型作为特效
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="file" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>模型路径，如：Models/weapon/bow/arrow000.mesh.j3o</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="bucket" use="optional">
                        <xs:simpleType>
                            <xs:restriction base="xs:string" >
                                <xs:enumeration value="Gui" />
                                <xs:enumeration value="Inherit" />
                                <xs:enumeration value="Opaque" />
                                <xs:enumeration value="Sky" />
                                <xs:enumeration value="Translucent" />
                                <xs:enumeration value="Transparent" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
<!--    <xs:element name="effectTextureCylinder">
        <xs:annotation>
            <xs:documentation>
                一个使用圆柱贴图的特效，特效图片会贴在圆柱体上。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="texture" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>材质贴图</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="axis" use="required">
                        <xs:annotation>
                            <xs:documentation>指定圆柱在哪一个轴向上,取值x/y/z</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="x"/>
                                <xs:enumeration value="y"/>
                                <xs:enumeration value="z"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="radius" type="xs:decimal" use="required">
                        <xs:annotation>
                            <xs:documentation>指定圆柱半径</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="height" type="xs:decimal" use="required">
                        <xs:annotation>
                            <xs:documentation>指定圆柱高度</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="offset" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>指定圆柱位置的偏移，格式："x,y,z"</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="color" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                贴图初始颜色
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>-->
    
    <xs:element name="effectTexture">
        <xs:annotation>
            <xs:documentation>
                一个由简单的材质图片构成的特效
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="texture" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>材质贴图,在一个平面上进行贴图，可指定原始位置在哪一个平面上。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="size" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>贴图大小,示例："1,1,1",最后一个值没有意义，但是不能省略。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="plane" type="plane" use="required">
                        <xs:annotation>
                            <xs:documentation>
                                指定贴图所在的原始平面：xy\xz\yz, 默认的贴图在xy平面上，可指定为xz或yz平面
                                (内部是以xy平面为标准，按逆时针方向旋转到指定平面),如指定为xz,则系统是以xy
                                为初始平面，并以x为轴旋转90度. 当指定为yz平面时，是以y为轴进行旋转90度
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="color" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                贴图初始颜色
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
<!--    <xs:element name="effectEncircleHalo">
        <xs:annotation>
            <xs:documentation>
                一个由几个星光环绕着目标旋转的特效。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="texture" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>星光的材质贴图</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="size" type="xs:integer" use="required">
                        <xs:annotation>
                            <xs:documentation>星光的数量</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="radius" type="xs:decimal" use="required">
                        <xs:annotation>
                            <xs:documentation>星光环绕半径</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>-->
    
    <xs:element name="effectGroup">
        <xs:annotation>
            <xs:documentation>
效果组, effectGroup可以打包一组子效果一起执行.1.子效果会追随着当前效果; 2.对effectGroup设置动画同时也会影响到子效果;
3.这种效果"不"需要设置时间，设置时间没有意义，当所有子效果都结束后effectGroup才会结束; 4.设置effectGroup的运行速度会直接影响到所有子效果。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="effects" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>
                                注意：该参数中不能包含无限时的子效果，否则该效果可能永远不会结束。
                                子效果组的id列表，用半角逗号分隔,如："effect1,effect2,effect3..."
如果子效果需要延迟启动，则在效果id后面添加延迟时间，使用"|"号隔开。该时间设置使用
单位秒, 如："effect1,effect2|0.3, effect3...", 其中effect2将在效果组启动后0.3秒的时候启动。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
<!--    <xs:element name="effectSimpleGroup">
        <xs:annotation>
            <xs:documentation>
 简单的效果组，该组内的效果一个一个按顺序执行，当一个执行完之后才会执行
 另一个效果。直到所有效果结束后，当前效果才算结束。
 使用该效果组需要注意以下几点：
 1.当前效果不会执行任何实质内容，只会逐一执行各个子效果。
 2.不要把带循环的效果加入到组内，否则可能该循环效果会阻止后续子效果的执行。
 3.当前的效果各阶段的时间设置将不会影响到子效果的执行时间。
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="effects" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>子效果组的id列表，用半角逗号分隔，如："effect1,effect2,effect3..."</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>-->
    
    <xs:element name="effectParticle">
        <xs:annotation>
            <xs:documentation>
                粒子效果
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="emitter" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>联接一个粒子发射器</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="emitAll" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否立即发射所有料子</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="randomColor" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否让粒子随机颜色，该设置会使粒子发射器中startColor和endColor的设置失效。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="inWorldSpace" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否让效果产生的粒子处于世界坐标位置，默认true,即粒子产生后不再受当前效果transform的影响。
                                如果设为false则产生的粒子位置会一直受效果transform的影响。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="blendMode" ref="blendMode" use="optional">
                        <xs:annotation>
                            <xs:documentation> 
                                粒子材质的混合模式，默认AlphaAdditive,这意味着粒子图片中的黑色背
                                景会被过滤掉。这会导致无法创建黑色烟雾的效果，这个时候可以使用
                                Alpha模式来代替。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
<!--    <xs:element name="effectHalo">
        <xs:annotation>
            <xs:documentation>光晕效果</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="effectBase">
                    <xs:attribute name="texture" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>光晕材质贴图</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="radius" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>半径</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloTotal" type="xs:integer" use="optional">
                        <xs:annotation>
                            <xs:documentation>光晕数量</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloSize" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>每个光晕的大小倍率如："1,1,1"</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="incline" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>倾斜值,大于0则向上倾斜，小于0则向下倾斜</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dynamicShow" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>光晕是否一个一个出现，否则立即全部出现，默认true</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dynamicInvert" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否反方向呈现（need dynamicShow= true),</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="dynamicRandom" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否随机出现,如果为true,则dynamicInvert无效(need dynamicShow=true)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloScaleShow" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否让每束光晕在出现时使用缩放动画，即让每束光晕从小到大出现。</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloScaleStart" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>开始缩放的大小</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloScaleEnd" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>结束缩放的大小</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="haloScaleSpeed" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>缩放的速度</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="rotate" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否旋转</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="rotateImmediate" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>光晕是否立即旋转,默认false，即在光晕全部出现后再旋转(need rotate = true)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="rotateInvert" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否逆向旋转(need rotate = true);</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="rotateSpeed" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>旋转速度,默认0.1</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="rotateLoop" type="loop" use="optional">
                        <xs:annotation>
                            <xs:documentation>旋转动画类型</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="scale" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否找开光晕缩放</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="scaleStart" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>缩放值</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="scaleEnd" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>缩放值</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="scaleSpeed" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>缩放动画的速度</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    
                    <xs:attribute name="scaleLoop" type="loop" use="optional">
                        <xs:annotation>
                            <xs:documentation>缩放动画类型</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                     <xs:attribute name="color" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>是否使用颜色动画
                            ，如果同时打开了scale动画，则设置相同的动画速度scaleSpeed和colorSpeed会看起来比较协调
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="colorStart" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>开始的颜色,示例："1,1,1,1"</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="colorEnd" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>结束的颜色,示例："1,1,1,1"</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="colorSpeed" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>动画速度</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="colorLoop" type="loop" use="optional">
                        <xs:annotation>
                            <xs:documentation>颜色动画类型</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>-->
    
    <xs:attribute name="blendMode">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="AlphaAdditive"/>
                <xs:enumeration value="Alpha"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>
    
    <xs:complexType name="effectBase">
        <xs:complexContent>
            <xs:extension base="base">
                <xs:attribute name="useTime" type="xs:decimal" use="required">
                    <xs:annotation>
                        <xs:documentation>特效运行时间，单位秒。默认"1.0"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                
                <!--注：speed不开放到xml配置，speed会作为动态参数在程序运行时根据情况动态设置。-->
<!--                <xs:attribute name="speed" type="xs:decimal" use="optional">
                    <xs:annotation>
                        <xs:documentation>特效运行速度。默认"1.0"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>-->
                
                <xs:attribute name="initLocation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            effect的初始位置(localTranslaction), 格式: "x,y,z", 当effect被添加到某个节点下时可以使用该参数来偏移位置，
                            当设置这个参数之后，effect在初始化的时候会覆盖掉之前的setLocaleTranslation的设置。
                            另外：当effect为“跟随”类型时这个参数将作为跟随时的偏移位置进行设置。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="initRotation" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            effect的初始旋转(localRotation), 格式:"x,y,z", 当effect被添加到某个节点下时可以使用该参数来偏移旋转，
                            当设置这个参数之后，effect在初始化的时候会覆盖掉之前的setLocaleRotation的设置。
                            另外：当effect为“跟随”类型时这个参数将作为跟随时的偏移旋转进行设置。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="initScale" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            effect的初始缩放(localScale), 格式, "x,y,z", 当设置这个参数之后，
                            effect在初始化的时候会覆盖掉之前的setLocaleScale的设置。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="tracePosition" use="required" >
                    <xs:annotation>
                        <xs:documentation>是否让效果跟踪目标，默认true,打开该参数后，必须在程序
                            运行时设置traceObject才有意义，否则将不会跟踪.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string" >
                            <xs:enumeration value="no" />
                            <xs:enumeration value="once" />
                            <xs:enumeration value="always" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="traceRotation" use="required" >
                    <xs:annotation>
                        <xs:documentation>是否跟随目标的旋转</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string" >
                            <xs:enumeration value="no" />
                            <xs:enumeration value="once" />
                            <xs:enumeration value="always" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="tracePositionType" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            特效的跟随位置,默认origin,即以原点为跟随位置
                        </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="origin" />
                            <xs:enumeration value="origin_bound_center" />
                            <xs:enumeration value="origin_bound_top" />
                            <xs:enumeration value="bound_center" />
                            <xs:enumeration value="bound_top" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="animations" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            绑定动画，格式："animation1|startTime,animation2|startTime,..."
                            startTime为动画开始的时间，单位“秒”,默认0
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sounds" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            绑定声音，格式："sound1|startTime,sound2|startTime,..."
                            startTime为声音开始的时间，单位“秒”,默认0
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="autoDetach" type="bool" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            是否允许特效在结束的时候自动进行清理并自动从场景中脱离。默认情况下如果特效是添加在EffectManager
                            下，则当特效在结束的时候会被EffectManager自动从场景中移除，不需要设置该参数。但是在其它情
                            况下，比如将特效添加在某一个特别的节点内时（非EffectManager管理），当特效结束时是不会自动从节点
                            内移除的，如果在此类情况下需要让特效自动从父节点中移除，则可以设置autoDetach为true.
                            这个参数的默认值为:false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
   
</xs:schema>
